// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alien.DataAccess.Migrations
{
    [DbContext(typeof(ConexaoBanco))]
    partial class ConexaoBancoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Domain.AlienDB_Cadastre_Seu_Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<int>("Id_Regiao")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tipo_Imovel")
                        .HasColumnType("int");

                    b.Property<string>("Nome_proprietario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Tel_contato")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Valor_aluguel")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Regiao");

                    b.HasIndex("Id_Tipo_Imovel");

                    b.ToTable("AlienDB_Cadastre_Seu_Imovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Empreendimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Construtura")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<int>("Id_Regiao")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tipo_Imovel")
                        .HasColumnType("int");

                    b.Property<string>("NomeLancamento")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Regiao");

                    b.HasIndex("Id_Tipo_Imovel");

                    b.ToTable("AlienDB_Empreendimentos");
                });

            modelBuilder.Entity("Domain.AlienDB_Empresa", b =>
                {
                    b.Property<int>("Id_Empresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Des_Contato")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Empresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Flg_Ativo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Empresa");

                    b.ToTable("AlienDB_Empresa");
                });

            modelBuilder.Entity("Domain.AlienDB_Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Codigo_chave")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Condicoes_Imovel")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Dat_Inclui")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Dat_saida_locacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Flg_destaque")
                        .HasColumnType("longtext");

                    b.Property<string>("Flg_status")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<int>("Id_Regiao")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tipo_Imovel")
                        .HasColumnType("int");

                    b.Property<decimal?>("Nro_Parcela_Inicio_Aluguel_Imobiliaria")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qtd_Aluguel_Advogado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qtd_Aluguel_Pintura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Qtd_Banheiro")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Carro_Garagem")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Copa")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Dispensa")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Dormitorios")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Edicula")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Lavanderia")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Quintal")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Sala_estar")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Sala_jantar")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd_Suite")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor_IPTU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valor_Taxa_Administrativa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valor_aluguel")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valor_condominio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Regiao");

                    b.HasIndex("Id_Tipo_Imovel");

                    b.ToTable("AlienDB_Imovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Midia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caminho")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<int>("Id_Imovel")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImagemByte")
                        .HasMaxLength(16)
                        .HasColumnType("Binary");

                    b.Property<bool>("ImagemPrincipal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Imovel");

                    b.ToTable("AlienDB_Midia");
                });

            modelBuilder.Entity("Domain.AlienDB_Regiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AlienDB_Regiao");
                });

            modelBuilder.Entity("Domain.AlienDB_Tipo_Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("FlgTipoImovel")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AlienDB_Tipo_Imovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Usuario_Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dat_Hora_Fim")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Des_Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Tag")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_Telefone")
                        .HasColumnType("longtext");

                    b.Property<string>("Des_UF")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Nom_Completo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom_Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nro_CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Nro_RG")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("AlienDB_Usuario_Sistema");
                });

            modelBuilder.Entity("Domain.AlienDB_Cadastre_Seu_Imovel", b =>
                {
                    b.HasOne("Domain.AlienDB_Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("Id_Regiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.AlienDB_Tipo_Imovel", "TipoImovel")
                        .WithMany()
                        .HasForeignKey("Id_Tipo_Imovel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");

                    b.Navigation("TipoImovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Empreendimentos", b =>
                {
                    b.HasOne("Domain.AlienDB_Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("Id_Regiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.AlienDB_Tipo_Imovel", "TipoImovel")
                        .WithMany()
                        .HasForeignKey("Id_Tipo_Imovel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");

                    b.Navigation("TipoImovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Imovel", b =>
                {
                    b.HasOne("Domain.AlienDB_Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("Id_Regiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.AlienDB_Tipo_Imovel", "TipoImovel")
                        .WithMany()
                        .HasForeignKey("Id_Tipo_Imovel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");

                    b.Navigation("TipoImovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Midia", b =>
                {
                    b.HasOne("Domain.AlienDB_Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("Id_Imovel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("Domain.AlienDB_Usuario_Sistema", b =>
                {
                    b.HasOne("Domain.AlienDB_Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
