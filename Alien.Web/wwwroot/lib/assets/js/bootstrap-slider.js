!function (t) { !function (t) { "use strict"; var i = Array.prototype.slice; function e() { } !function (t) { if (t) { var s = "undefined" == typeof console ? e : function (t) { console.error(t) }; t.bridget = function (e, o) { !function (i) { i.prototype.option || (i.prototype.option = function (i) { t.isPlainObject(i) && (this.options = t.extend(!0, this.options, i)) }) }(o), function (e, o) { t.fn[e] = function (n) { if ("string" == typeof n) { for (var h = i.call(arguments, 1), a = 0, l = this.length; a < l; a++) { var r = this[a], d = t.data(r, e); if (d) if (t.isFunction(d[n]) && "_" !== n.charAt(0)) { var p = d[n].apply(d, h); if (void 0 !== p && p !== d) return p } else s("no such method '" + n + "' for " + e + " instance"); else s("cannot call methods on " + e + " prior to initialization; attempted to call '" + n + "'") } return this } var m = this.map(function () { var i = t.data(this, e); return i ? (i.option(n), i._init()) : (i = new o(this, n), t.data(this, e, i)), t(this) }); return !m || m.length > 1 ? m : m[0] } }(e, o) }, t.bridget } }(t) }(t), function (t) { var i = function (t) { return "Invalid input value '" + t + "' passed in" }, e = function (t, i) { return s.call(this, t, i), this }; function s(i, e) { "string" == typeof i ? this.element = document.querySelector(i) : i instanceof HTMLElement && (this.element = i); var s, o, n, h = this.element.style.width, a = !1, l = this.element.parentNode; if (this.sliderElem) a = !0; else { this.sliderElem = document.createElement("div"), this.sliderElem.className = "slider"; var r = document.createElement("div"); r.className = "slider-track", (s = document.createElement("div")).className = "slider-selection", (o = document.createElement("div")).className = "slider-handle min-slider-handle", (n = document.createElement("div")).className = "slider-handle max-slider-handle", r.appendChild(s), r.appendChild(o), r.appendChild(n); var d = function (t) { var i = document.createElement("div"); i.className = "tooltip-arrow"; var e = document.createElement("div"); e.className = "tooltip-inner", t.appendChild(i), t.appendChild(e) }, p = document.createElement("div"); p.className = "tooltip tooltip-main", d(p); var m = document.createElement("div"); m.className = "tooltip tooltip-min", d(m); var u = document.createElement("div"); u.className = "tooltip tooltip-max", d(u), this.sliderElem.appendChild(r), this.sliderElem.appendChild(p), this.sliderElem.appendChild(m), this.sliderElem.appendChild(u), l.insertBefore(this.sliderElem, this.element), this.element.style.display = "none" } t && (this.$element = t(this.element), this.$sliderElem = t(this.sliderElem)), e = e || {}; for (var c = Object.keys(this.defaultOptions), v = 0; v < c.length; v++) { var f = c[v], _ = e[f]; _ = null !== (_ = void 0 !== _ ? _ : g(this.element, f)) ? _ : this.defaultOptions[f], this.options || (this.options = {}), this.options[f] = _ } function g(t, i) { var e = "data-slider-" + i, s = t.getAttribute(e); try { return JSON.parse(s) } catch (t) { return s } } this.eventToCallbackMap = {}, this.sliderElem.id = this.options.id, this.touchCapable = "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch, this.tooltip = this.sliderElem.querySelector(".tooltip-main"), this.tooltipInner = this.tooltip.querySelector(".tooltip-inner"), this.tooltip_min = this.sliderElem.querySelector(".tooltip-min"), this.tooltipInner_min = this.tooltip_min.querySelector(".tooltip-inner"), this.tooltip_max = this.sliderElem.querySelector(".tooltip-max"), this.tooltipInner_max = this.tooltip_max.querySelector(".tooltip-inner"), !0 === a && (this._removeClass(this.sliderElem, "slider-horizontal"), this._removeClass(this.sliderElem, "slider-vertical"), this._removeClass(this.tooltip, "hide"), this._removeClass(this.tooltip_min, "hide"), this._removeClass(this.tooltip_max, "hide"), ["left", "top", "width", "height"].forEach(function (t) { this._removeProperty(this.trackSelection, t) }, this), [this.handle1, this.handle2].forEach(function (t) { this._removeProperty(t, "left"), this._removeProperty(t, "top") }, this), [this.tooltip, this.tooltip_min, this.tooltip_max].forEach(function (t) { this._removeProperty(t, "left"), this._removeProperty(t, "top"), this._removeProperty(t, "margin-left"), this._removeProperty(t, "margin-top"), this._removeClass(t, "right"), this._removeClass(t, "top") }, this)), "vertical" === this.options.orientation ? (this._addClass(this.sliderElem, "slider-vertical"), this.stylePos = "top", this.mousePos = "pageY", this.sizePos = "offsetHeight", this._addClass(this.tooltip, "right"), this.tooltip.style.left = "100%", this._addClass(this.tooltip_min, "right"), this.tooltip_min.style.left = "100%", this._addClass(this.tooltip_max, "right"), this.tooltip_max.style.left = "100%") : (this._addClass(this.sliderElem, "slider-horizontal"), this.sliderElem.style.width = h, this.options.orientation = "horizontal", this.stylePos = "left", this.mousePos = "pageX", this.sizePos = "offsetWidth", this._addClass(this.tooltip, "top"), this.tooltip.style.top = -this.tooltip.outerHeight - 14 + "px", this._addClass(this.tooltip_min, "top"), this.tooltip_min.style.top = -this.tooltip_min.outerHeight - 14 + "px", this._addClass(this.tooltip_max, "top"), this.tooltip_max.style.top = -this.tooltip_max.outerHeight - 14 + "px"), this.options.value instanceof Array ? this.options.range = !0 : this.options.range && (this.options.value = [this.options.value, this.options.max]), this.trackSelection = s || this.trackSelection, "none" === this.options.selection && this._addClass(this.trackSelection, "hide"), this.handle1 = o || this.handle1, this.handle2 = n || this.handle2, !0 === a && (this._removeClass(this.handle1, "round triangle"), this._removeClass(this.handle2, "round triangle hide")); -1 !== ["round", "triangle", "custom"].indexOf(this.options.handle) && (this._addClass(this.handle1, this.options.handle), this._addClass(this.handle2, this.options.handle)), this.offset = this._offset(this.sliderElem), this.size = this.sliderElem[this.sizePos], this.setValue(this.options.value), this.handle1Keydown = this._keydown.bind(this, 0), this.handle1.addEventListener("keydown", this.handle1Keydown, !1), this.handle2Keydown = this._keydown.bind(this, 0), this.handle2.addEventListener("keydown", this.handle2Keydown, !1), this.touchCapable ? (this.mousedown = this._mousedown.bind(this), this.sliderElem.addEventListener("touchstart", this.mousedown, !1)) : (this.mousedown = this._mousedown.bind(this), this.sliderElem.addEventListener("mousedown", this.mousedown, !1)), "hide" === this.options.tooltip ? (this._addClass(this.tooltip, "hide"), this._addClass(this.tooltip_min, "hide"), this._addClass(this.tooltip_max, "hide")) : "always" === this.options.tooltip ? (this._showTooltip(), this._alwaysShowTooltip = !0) : (this.showTooltip = this._showTooltip.bind(this), this.hideTooltip = this._hideTooltip.bind(this), this.sliderElem.addEventListener("mouseenter", this.showTooltip, !1), this.sliderElem.addEventListener("mouseleave", this.hideTooltip, !1), this.handle1.addEventListener("focus", this.showTooltip, !1), this.handle1.addEventListener("blur", this.hideTooltip, !1), this.handle2.addEventListener("focus", this.showTooltip, !1), this.handle2.addEventListener("blur", this.hideTooltip, !1)), this.options.enabled ? this.enable() : this.disable() } if (e.prototype = { _init: function () { }, constructor: e, defaultOptions: { id: "", min: 0, max: 10, step: 1, precision: 0, orientation: "horizontal", value: 5, range: !1, selection: "before", tooltip: "show", tooltip_split: !1, handle: "round", reversed: !1, enabled: !0, formatter: function (t) { return t instanceof Array ? t[0] + " : " + t[1] : t }, natural_arrow_keys: !1 }, over: !1, inDrag: !1, getValue: function () { return this.options.range ? this.options.value : this.options.value[0] }, setValue: function (t, i) { t || (t = 0), this.options.value = this._validateInputValue(t); var e = this._applyPrecision.bind(this); this.options.range ? (this.options.value[0] = e(this.options.value[0]), this.options.value[1] = e(this.options.value[1]), this.options.value[0] = Math.max(this.options.min, Math.min(this.options.max, this.options.value[0])), this.options.value[1] = Math.max(this.options.min, Math.min(this.options.max, this.options.value[1]))) : (this.options.value = e(this.options.value), this.options.value = [Math.max(this.options.min, Math.min(this.options.max, this.options.value))], this._addClass(this.handle2, "hide"), "after" === this.options.selection ? this.options.value[1] = this.options.max : this.options.value[1] = this.options.min), this.diff = this.options.max - this.options.min, this.diff > 0 ? this.percentage = [100 * (this.options.value[0] - this.options.min) / this.diff, 100 * (this.options.value[1] - this.options.min) / this.diff, 100 * this.options.step / this.diff] : this.percentage = [0, 0, 100], this._layout(); var s = this.options.range ? this.options.value : this.options.value[0]; return this._setDataVal(s), !0 === i && this._trigger("slide", s), this }, destroy: function () { this._removeSliderEventHandlers(), this.sliderElem.parentNode.removeChild(this.sliderElem), this.element.style.display = "", this._cleanUpEventCallbacksMap(), this.element.removeAttribute("data"), t && (this._unbindJQueryEventHandlers(), this.$element.removeData("slider")) }, disable: function () { return this.options.enabled = !1, this.handle1.removeAttribute("tabindex"), this.handle2.removeAttribute("tabindex"), this._addClass(this.sliderElem, "slider-disabled"), this._trigger("slideDisabled"), this }, enable: function () { return this.options.enabled = !0, this.handle1.setAttribute("tabindex", 0), this.handle2.setAttribute("tabindex", 0), this._removeClass(this.sliderElem, "slider-disabled"), this._trigger("slideEnabled"), this }, toggle: function () { return this.options.enabled ? this.disable() : this.enable(), this }, isEnabled: function () { return this.options.enabled }, on: function (i, e) { return t ? (this.$element.on(i, e), this.$sliderElem.on(i, e)) : this._bindNonQueryEventHandler(i, e), this }, getAttribute: function (t) { return t ? this.options[t] : this.options }, setAttribute: function (t, i) { return this.options[t] = i, this }, refresh: function () { return this._removeSliderEventHandlers(), s.call(this, this.element, this.options), t && t.data(this.element, "slider", this), this }, _removeSliderEventHandlers: function () { this.handle1.removeEventListener("keydown", this.handle1Keydown, !1), this.handle1.removeEventListener("focus", this.showTooltip, !1), this.handle1.removeEventListener("blur", this.hideTooltip, !1), this.handle2.removeEventListener("keydown", this.handle2Keydown, !1), this.handle2.removeEventListener("focus", this.handle2Keydown, !1), this.handle2.removeEventListener("blur", this.handle2Keydown, !1), this.sliderElem.removeEventListener("mouseenter", this.showTooltip, !1), this.sliderElem.removeEventListener("mouseleave", this.hideTooltip, !1), this.sliderElem.removeEventListener("touchstart", this.mousedown, !1), this.sliderElem.removeEventListener("mousedown", this.mousedown, !1) }, _bindNonQueryEventHandler: function (t, i) { void 0 === this.eventToCallbackMap[t] && (this.eventToCallbackMap[t] = []), this.eventToCallbackMap[t].push(i) }, _cleanUpEventCallbacksMap: function () { for (var t = Object.keys(this.eventToCallbackMap), i = 0; i < t.length; i++) { var e = t[i]; this.eventToCallbackMap[e] = null } }, _showTooltip: function () { !1 === this.options.tooltip_split ? this._addClass(this.tooltip, "in") : (this._addClass(this.tooltip_min, "in"), this._addClass(this.tooltip_max, "in")), this.over = !0 }, _hideTooltip: function () { !1 === this.inDrag && !0 !== this.alwaysShowTooltip && (this._removeClass(this.tooltip, "in"), this._removeClass(this.tooltip_min, "in"), this._removeClass(this.tooltip_max, "in")), this.over = !1 }, _layout: function () { var t, i; if (t = this.options.reversed ? [100 - this.percentage[0], this.percentage[1]] : [this.percentage[0], this.percentage[1]], this.handle1.style[this.stylePos] = t[0] + "%", this.handle2.style[this.stylePos] = t[1] + "%", "vertical" === this.options.orientation) this.trackSelection.style.top = Math.min(t[0], t[1]) + "%", this.trackSelection.style.height = Math.abs(t[0] - t[1]) + "%"; else { this.trackSelection.style.left = Math.min(t[0], t[1]) + "%", this.trackSelection.style.width = Math.abs(t[0] - t[1]) + "%"; var e = this.tooltip_min.getBoundingClientRect(), s = this.tooltip_max.getBoundingClientRect(); e.right > s.left ? (this._removeClass(this.tooltip_max, "top"), this._addClass(this.tooltip_max, "bottom"), this.tooltip_max.style.top = "18px") : (this._removeClass(this.tooltip_max, "bottom"), this._addClass(this.tooltip_max, "top"), this.tooltip_max.style.top = "-30px") } if (this.options.range) { i = this.options.formatter(this.options.value), this._setText(this.tooltipInner, i), this.tooltip.style[this.stylePos] = (t[1] + t[0]) / 2 + "%", "vertical" === this.options.orientation ? this._css(this.tooltip, "margin-top", -this.tooltip.offsetHeight / 2 + "px") : this._css(this.tooltip, "margin-left", -this.tooltip.offsetWidth / 2 + "px"), "vertical" === this.options.orientation ? this._css(this.tooltip, "margin-top", -this.tooltip.offsetHeight / 2 + "px") : this._css(this.tooltip, "margin-left", -this.tooltip.offsetWidth / 2 + "px"); var o = this.options.formatter(this.options.value[0]); this._setText(this.tooltipInner_min, o); var n = this.options.formatter(this.options.value[1]); this._setText(this.tooltipInner_max, n), this.tooltip_min.style[this.stylePos] = t[0] + "%", "vertical" === this.options.orientation ? this._css(this.tooltip_min, "margin-top", -this.tooltip_min.offsetHeight / 2 + "px") : this._css(this.tooltip_min, "margin-left", -this.tooltip_min.offsetWidth / 2 + "px"), this.tooltip_max.style[this.stylePos] = t[1] + "%", "vertical" === this.options.orientation ? this._css(this.tooltip_max, "margin-top", -this.tooltip_max.offsetHeight / 2 + "px") : this._css(this.tooltip_max, "margin-left", -this.tooltip_max.offsetWidth / 2 + "px") } else i = this.options.formatter(this.options.value[0]), this._setText(this.tooltipInner, i), this.tooltip.style[this.stylePos] = t[0] + "%", "vertical" === this.options.orientation ? this._css(this.tooltip, "margin-top", -this.tooltip.offsetHeight / 2 + "px") : this._css(this.tooltip, "margin-left", -this.tooltip.offsetWidth / 2 + "px") }, _removeProperty: function (t, i) { t.style.removeProperty ? t.style.removeProperty(i) : t.style.removeAttribute(i) }, _mousedown: function (t) { if (!this.options.enabled) return !1; this._triggerFocusOnHandle(), this.offset = this._offset(this.sliderElem), this.size = this.sliderElem[this.sizePos]; var i = this._getPercentage(t); if (this.options.range) { var e = Math.abs(this.percentage[0] - i), s = Math.abs(this.percentage[1] - i); this.dragged = e < s ? 0 : 1 } else this.dragged = 0; this.percentage[this.dragged] = this.options.reversed ? 100 - i : i, this._layout(), this.mousemove = this._mousemove.bind(this), this.mouseup = this._mouseup.bind(this), this.touchCapable ? (document.addEventListener("touchmove", this.mousemove, !1), document.addEventListener("touchend", this.mouseup, !1)) : (document.addEventListener("mousemove", this.mousemove, !1), document.addEventListener("mouseup", this.mouseup, !1)), this.inDrag = !0; var o = this._calculateValue(); return this._trigger("slideStart", o), this._setDataVal(o), this.setValue(o), this._pauseEvent(t), !0 }, _triggerFocusOnHandle: function (t) { 0 === t && this.handle1.focus(), 1 === t && this.handle2.focus() }, _keydown: function (t, i) { if (!this.options.enabled) return !1; var e; switch (i.keyCode) { case 37: case 40: e = -1; break; case 39: case 38: e = 1 }if (e) { if (this.options.natural_arrow_keys) { var s = "vertical" === this.options.orientation && !this.options.reversed, o = "horizontal" === this.options.orientation && this.options.reversed; (s || o) && (e *= -1) } var n = e * this.percentage[2], h = this.percentage[t] + n; h > 100 ? h = 100 : h < 0 && (h = 0), this.dragged = t, this._adjustPercentageForRangeSliders(h), this.percentage[this.dragged] = h, this._layout(); var a = this._calculateValue(); return this._trigger("slideStart", a), this._setDataVal(a), this.setValue(a, !0), this._trigger("slideStop", a), this._setDataVal(a), this._pauseEvent(i), !1 } }, _pauseEvent: function (t) { t.stopPropagation && t.stopPropagation(), t.preventDefault && t.preventDefault(), t.cancelBubble = !0, t.returnValue = !1 }, _mousemove: function (t) { if (!this.options.enabled) return !1; var i = this._getPercentage(t); this._adjustPercentageForRangeSliders(i), this.percentage[this.dragged] = this.options.reversed ? 100 - i : i, this._layout(); var e = this._calculateValue(); return this.setValue(e, !0), !1 }, _adjustPercentageForRangeSliders: function (t) { this.options.range && (0 === this.dragged && this.percentage[1] < t ? (this.percentage[0] = this.percentage[1], this.dragged = 1) : 1 === this.dragged && this.percentage[0] > t && (this.percentage[1] = this.percentage[0], this.dragged = 0)) }, _mouseup: function () { if (!this.options.enabled) return !1; this.touchCapable ? (document.removeEventListener("touchmove", this.mousemove, !1), document.removeEventListener("touchend", this.mouseup, !1)) : (document.removeEventListener("mousemove", this.mousemove, !1), document.removeEventListener("mouseup", this.mouseup, !1)), this.inDrag = !1, !1 === this.over && this._hideTooltip(); var t = this._calculateValue(); return this._layout(), this._setDataVal(t), this._trigger("slideStop", t), !1 }, _calculateValue: function () { var t; return this.options.range ? (t = [this.options.min, this.options.max], 0 !== this.percentage[0] && (t[0] = Math.max(this.options.min, this.options.min + Math.round(this.diff * this.percentage[0] / 100 / this.options.step) * this.options.step), t[0] = this._applyPrecision(t[0])), 100 !== this.percentage[1] && (t[1] = Math.min(this.options.max, this.options.min + Math.round(this.diff * this.percentage[1] / 100 / this.options.step) * this.options.step), t[1] = this._applyPrecision(t[1])), this.options.value = t) : ((t = this.options.min + Math.round(this.diff * this.percentage[0] / 100 / this.options.step) * this.options.step) < this.options.min ? t = this.options.min : t > this.options.max && (t = this.options.max), t = parseFloat(t), t = this._applyPrecision(t), this.options.value = [t, this.options.value[1]]), t }, _applyPrecision: function (t) { var i = this.options.precision || this._getNumDigitsAfterDecimalPlace(this.step); return this._applyToFixedAndParseFloat(t, i) }, _getNumDigitsAfterDecimalPlace: function (t) { var i = ("" + t).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/); return i ? Math.max(0, (i[1] ? i[1].length : 0) - (i[2] ? +i[2] : 0)) : 0 }, _applyToFixedAndParseFloat: function (t, i) { var e = t.toFixed(i); return parseFloat(e) }, _getPercentage: function (t) { !this.touchCapable || "touchstart" !== t.type && "touchmove" !== t.type || (t = t.touches[0]); var i = 100 * (t[this.mousePos] - this.offset[this.stylePos]) / this.size; return i = Math.round(i / this.percentage[2]) * this.percentage[2], Math.max(0, Math.min(100, i)) }, _validateInputValue: function (t) { if ("number" == typeof t) return t; if (t instanceof Array) return this._validateArray(t), t; throw new Error(i(t)) }, _validateArray: function (t) { for (var e = 0; e < t.length; e++) { var s = t[e]; if ("number" != typeof s) throw new Error(i(s)) } }, _setDataVal: function (t) { var i = "value: '" + t + "'"; this.element.setAttribute("data", i), this.element.setAttribute("value", t) }, _trigger: function (i, e) { e = e || void 0; var s = this.eventToCallbackMap[i]; if (s && s.length) for (var o = 0; o < s.length; o++) { (0, s[o])(e) } t && this._triggerJQueryEvent(i, e) }, _triggerJQueryEvent: function (t, i) { var e = { type: t, value: i }; this.$element.trigger(e), this.$sliderElem.trigger(e) }, _unbindJQueryEventHandlers: function () { this.$element.off(), this.$sliderElem.off() }, _setText: function (t, i) { void 0 !== t.innerText ? t.innerText = i : void 0 !== t.textContent && (t.textContent = i) }, _removeClass: function (t, i) { for (var e = i.split(" "), s = t.className, o = 0; o < e.length; o++) { var n = e[o], h = new RegExp("(?:\\s|^)" + n + "(?:\\s|$)"); s = s.replace(h, " ") } t.className = s.trim() }, _addClass: function (t, i) { for (var e = i.split(" "), s = t.className, o = 0; o < e.length; o++) { var n = e[o]; new RegExp("(?:\\s|^)" + n + "(?:\\s|$)").test(s) || (s += " " + n) } t.className = s.trim() }, _offset: function (t) { var i = 0, e = 0; if (t.offsetParent) do { i += t.offsetLeft, e += t.offsetTop } while (t = t.offsetParent); return { left: i, top: e } }, _css: function (t, i, e) { t.style[i] = e } }, t) { var o = t.fn.slider ? "bootstrapSlider" : "slider"; t.bridget(o, e) } else window.Slider = e }(t) }(window.jQuery);